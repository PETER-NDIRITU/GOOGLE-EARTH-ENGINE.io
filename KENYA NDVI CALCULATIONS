Map.addLayer(Counties)
Map.centerObject(Counties,7)
// Map.addLayer(Counties);
// Map.centerObject(Counties,11);
var filtered = s2.filter(ee.Filter.bounds(Counties))
 .filter(ee.Filter.date('2022-01-01', '2023-05-30'))
 .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 10));
 
// var classification = ee.Image(filtered.first())
 
 
 var rgbVis = {min: 0.0, max: 3000, bands: ['B4', 'B3', 'B2']};
var newmerge_median = filtered.median()
 //displaying layer
 
 
 // Write a function to scale the bands
var scaleImage = function(image) {
  return image
    .multiply(0.0001)
    .copyProperties(image, ["system:time_start"])
}


// // Write a function to scale the bands
// var scaleImage = function(image) {
//   return image
//     .multiply(0.0001)
//     .copyProperties(image, ["system:time_start"])
// }

var newmerge_clip = newmerge_median.clip(Counties);
Map.addLayer( newmerge_clip,rgbVis);
// Write a function that computes NDVI for an image and adds it as a band
function addNDVI(image) {
  var ndvi = image.normalizedDifference(['B8', 'B4']).rename('ndvi');
  return image.addBands(ndvi);
}

// Map the function over the collection
var withNdvi = filtered.map(addNDVI);

var composite = withNdvi.median();

var ndviComposite = composite.select('ndvi').clip(Counties);

var palette = ['red', 'yellow', 'green'];

var ndviVis = {min:0, max:0.5, palette: palette };
Map.addLayer(ndviComposite, ndviVis, 'ndvi');


// Display a time-series chart
var chart = ui.Chart.image.series({
  imageCollection: withNdvi.select('ndvi'),
  region: Counties,
  reducer: ee.Reducer.mean(),
  scale: 10
}).setOptions({
      lineWidth: 1,
      title: 'NDVI Time Series',
      interpolateNulls: true,
      vAxis: {title: 'NDVI'},
      hAxis: {title: '', format: 'YYYY-MMM'}
    })
print(chart);
